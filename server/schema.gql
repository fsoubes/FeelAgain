# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type Blog {
  _id: ObjectId!
  article: String
  author: User!
  authRating: String
  comments: Comment!
  createdAt: String!
  description: String
  downRating: [User!]!
  image_url: String
  isPublished: Boolean
  positiveRating: Float!
  social: [String!]!
  source: [String!]!
  tags: [String!]!
  title: String!
  totalVoting: Float!
  updatedAt: DateTime!
  upRating: [User!]!
}

input BlogInput {
  article: String
  description: String
  image_url: String
  isPublished: Boolean
  social: [String!]
  source: [String!]
  tags: [String!]
  title: String!
}

type Comment {
  _id: ObjectId!
  author: User!
  message: String!
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

type FieldError {
  field: String!
  message: String!
}

input ImageInput {
  height: Float!
  position: Float!
  product_id: String!
  src: String!
  width: Float!
}

type Images {
  _id: ObjectId!
  height: Float!
  position: Float!
  product_id: String!
  src: String!
  width: Float!
}

type Mutation {
  addArticle(blog: BlogInput!): Blog!
  addImage(Image: ImageInput!, ParentId: String!): String!
  addRelation: Boolean!
  addShoe(Shoe: ShoesInput!): ObjectId!
  addShoes: Boolean!
  addVariant(parentId: String!, Variant: VariantInput!): String!
  changePassword(newPassword: String!, token: String!): UserResponse!
  forgotPassword(email: String!): Boolean!
  login(user: UserLogin!): UserResponse!
  logout: Boolean!
  ratingReview(articleId: String!, rating: String!): Boolean!
  register(user: UserRegister!): UserResponse!
  removeShoe(ShoeId: String!): String!
  updateShoe(shoeId: String!, Shoes: String!): Shoes!
}

"""Mongo object id scalar type"""
scalar ObjectId

type OptionShoes {
  name: String!
  position: String!
  values: [String!]!
}

type PaginationInfo {
  endCursor: String
  hasNextPage: Boolean
}

type PaginationResponse {
  edges: [Blog!]!
  pageInfo: PaginationInfo!
}

type Query {
  getArticles(cursor: String, limit: Float!): PaginationResponse!
  getFilterShoes(limit: Float!): [Shoes!]!
  getSingleArticle(articleId: ObjectId!): Blog!
  getSingleShoe(shoesId: ObjectId!): Shoes!
  me: User
}

type Shoes {
  _id: ObjectId!
  body_html: String!
  bought_by: Float!
  createdAt: DateTime!
  handle: String!
  images: [Images!]!
  options: [OptionShoes!]!
  product_type: String!
  relatives: [Shoes!]!
  score: Float!
  scored_by: Float!
  switchTitle: [String!]!
  tags: [String!]!
  title: String!
  updatedAt: DateTime!
  variants: [Variants!]!
  vendor: String!
  visited_by: Float!
}

input ShoesInput {
  body_html: String
  handle: String
  product_type: String
  switch: String
  tags: [String!]
  title: String!
  vendor: String
}

type User {
  _id: ObjectId!
  createdAt: DateTime!
  email: String!
  nickname: String!
  updatedAt: DateTime!
}

input UserLogin {
  email: String!
  password: String!
}

input UserRegister {
  email: String!
  nickname: String!
  password: String!
}

type UserResponse {
  errors: [FieldError!]
  user: User
}

input VariantInput {
  available: String!
  compare_at_price: String!
  featured_image: String!
  grams: Float!
  option1: String!
  option2: String!
  option3: String!
  price: String!
  product_id: String!
  quantity: String!
  sku: String!
  title: String!
}

type Variants {
  _id: ObjectId!
  available: String!
  compare_at_price: String!
  featured_image: String!
  grams: Float!
  option1: String!
  option2: String!
  option3: String!
  price: String!
  product_id: String!
  quantity: String!
  sku: String!
  title: String!
}
